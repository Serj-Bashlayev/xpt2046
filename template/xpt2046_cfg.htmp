// Copyright (c) 2021 Ziga Miklosic
// All Rights Reserved
// This software is under MIT licence (https://opensource.org/licenses/MIT)
////////////////////////////////////////////////////////////////////////////////
/**
*@file      xpt2046_cfg.h
*@brief     Configuration file for ILI9488 driver
*@author    Ziga Miklosic
*@date      29.06.2021
*@version	V1.0.1
*/
////////////////////////////////////////////////////////////////////////////////
/**
*@addtogroup XPT2046_CFG
* @{ <!-- BEGIN GROUP -->
*
* 	Configurations for XPT2046 driver.
*/
////////////////////////////////////////////////////////////////////////////////

#ifndef _XPT2046_CFG_H_
#define _XPT2046_CFG_H_

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include <stdint.h>
#include "project_config.h"

// USER INCLUDE BEGIN...

// Debug communication port
#include "middleware/debug_comm_port/com_dbg.h"

// USER INCLUDE END...

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

// USER CODE BEGIN

/**
 * 	Enable/Disable debug mode
 */
#define XPT2046_DEBUG_EN				( 1 )

/**
 * 	Enable/Disable assertions
 */
#define XPT2046_ASSERT_EN				( 1 )

// **********************************************************
// 	ADC RESOLUTION
// **********************************************************

#define XPT2046_ADC_12_BIT				( 0 )
#define XPT2046_ADC_8_BIT				( 1 )
#define XPT2046_ADC_RESOLUTION 			( XPT2046_ADC_12_BIT )


// **********************************************************
// 	REFERENCE MODE
// **********************************************************

#define XPT2046_REF_MODE_DIFFERENTIAL	( 0 )
#define XPT2046_REF_MODE_SINGLE_ENDED	( 1 )
#define XPT2046_REF_MODE 				( XPT2046_REF_MODE_DIFFERENTIAL )


// **********************************************************
// 	3 POINT CALIBRATION
// **********************************************************

// Display limitations
#define XPT2046_DISPLAY_MAX_X			( 320 )
#define XPT2046_DISPLAY_MAX_Y			( 240 )

// Coordinates
#define XPT2046_POINT_1_XY				{ 48,  32  }
#define XPT2046_POINT_2_XY				{ XPT2046_DISPLAY_MAX_X / 2, XPT2046_DISPLAY_MAX_Y - 32 }
#define XPT2046_POINT_3_XY				{ XPT2046_DISPLAY_MAX_X - 48, XPT2046_DISPLAY_MAX_Y / 2 }


//***********************************************************
/*  Filter sequence
*************************************************************
   +-----------+  +-----------+  +-----------+  +-----------+
   | Read data |  | Pressure  |  | Skip      |  | Debounce  |
   | from      |  | threshold |  | samples   |  |           |
   | controler |  |           |  |           |  |           |
   |        X/Y|->|-----------|->|-----------|->|-----------|->.
   |      force|->|- USE -----|->|-----------|->|-----------|->.
   | is_pressed|->|- CHANGE --|->|- CHANGE --|->|- CHANGE --|->.
   +-----------+  +-----------+  +-----------+  +-----------+

   +-----------+  +-----------+  +-----------+  +-----------+
   | Median    |  | IIR       |  | Averaging |  | Jitter    |
   |           |  |           |  |           |  |           |
   |           |  |           |  |           |  |           |     +-------------+
.->|- CHANGE --|->|- CHANGE --|->|- CHANGE --|->|- CHANGE --|---->| calibration |->
.->|-----------|->|-----------|->|- CHANGE --|->|-----------|---+ +-------------+
.->|- CHANGE --|->|- USE -----|->|- CHANGE --|->|- USE -----|-+ |
   +-----------+  +-----------+  +-----------+  +-----------+ | +----------------->
                                                              +------------------->
*/
// **********************************************************
// 	TOUCH FILTER (Pressure threshold)
// **********************************************************
// Enable filter(0/1)
#define XPT2046_FILTER_PTHRES_EN		( 1 )

// Filter pressure threshold
#define XPT2046_FILTER_PTHRES_ON		( 100 )
#define XPT2046_FILTER_PTHRES_OFF		( 80 )

// **********************************************************
// 	TOUCH FILTER (Skip samples after press)
// **********************************************************
// Enable filter(0/1)
#define XPT2046_FILTER_SKIP_EN			( 1 )

// Skip first samples
#define XPT2046_FILTER_SKIP_SAMP		( 2 )

// **********************************************************
//  TOUCH FILTER (Debounce mechanism)
// **********************************************************
// Enable filter(0/1)
#define XPT2046_FILTER_DEBOUNCE_EN		( 1 )

// Filter time in msec
#define XPT2046_FILTER_DEBOUNCE_TIME	( 50 )

// **********************************************************
//  TOUCH FILTER (Median filter)
// **********************************************************
// Enable filter(0/1)
#define XPT2046_FILTER_MEDIAN_EN		( 1 )

// Use fast median filter
//     (fixed window size = 5)
#define XPT2046_FILTER_USE_FAST_MEDIAN	( 1 )

// Filter window in samples
#define XPT2046_FILTER_MEDIAN_WIN		( 5 )

// **********************************************************
//  TOUCH FILTER (IIR)
// **********************************************************
// Enable filter(0/1)
#define XPT2046_FILTER_IIR_EN			( 1 )

// Filter coefficients
#define XPT2046_FILTER_IIR_N 			( 9 )
#define XPT2046_FILTER_IIR_D 			( 10 )

// **********************************************************
// 	TOUCH FILTER (Moving average)
// **********************************************************
// Enable filter(0/1)
#define XPT2046_FILTER_AVG_EN			( 0 )

// Filter window in samples
#define XPT2046_FILTER_AVG_SAMP			( 8 )

// **********************************************************
//  TOUCH FILTER (Jitter)
// **********************************************************
// Enable filter(0/1)
#define XPT2046_FILTER_JITTER_EN		( 1 )

// Filter threshold level
#define XPT2046_FILTER_JITTER_THRES		( 15 )


// USER CODE END...

/**
 * 	Debug communication port macros
 */
#if ( 1 == XPT2046_DEBUG_EN )
	#define XPT2046_DBG_PRINT( ... )					( com_dbg_print( eCOM_DBG_CH_INFO, (const char*) __VA_ARGS__ ))
#else
	#define XPT2046_DBG_PRINT( ... )					{ ; }

#endif

/**
 * 	 Assertion macros
 */
#if ( 1 == XPT2046_ASSERT_EN )
	#define XPT2046_ASSERT(x)							PROJECT_CONFIG_ASSERT(x)
#else
	#define XPT2046_ASSERT(x)							{ ; }
#endif


#endif // _XPT2046_CFG_H_
